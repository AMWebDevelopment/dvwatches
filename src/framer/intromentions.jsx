// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project e8637dcc282c405e "DaVinci Watches - Finale", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Laptop' | 'Tablet' | 'Phone' // Variant
}} Props

 */

/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */
import { className, css, fonts } from "./chunks/chunk-PLG5VZTK.js";
import { routes } from "./chunks/chunk-3QCU63GD.js";

// virtual:intromentions
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/Intromentions-5OyG.js
import { jsx as _jsx } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getFontsFromSharedStyle,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var cycleOrder = ["nQoKqxPaD", "yb3MdUw5M", "VlatdNtLh", "aIZXnFDBd"];
var serializationHash = "framer-YnsON";
var variantClassNames = {
	aIZXnFDBd: "framer-v-1wurkgl",
	nQoKqxPaD: "framer-v-1p8f9zs",
	VlatdNtLh: "framer-v-jj27mw",
	yb3MdUw5M: "framer-v-1hqds8i",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var transformTemplate1 = (_, t) => `translateX(-50%) ${t}`;
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Desktop: "nQoKqxPaD",
	Laptop: "yb3MdUw5M",
	Phone: "aIZXnFDBd",
	Tablet: "VlatdNtLh",
};
var getProps = ({ height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "nQoKqxPaD",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "nQoKqxPaD",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1p8f9zs",
							className2,
							classNames,
						)}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"nQoKqxPaD"}
						ref={refBinding}
						style={{
							backgroundColor: "rgb(255, 255, 255)",
							...style,
						}}
						{...addPropertyOverrides(
							{
								aIZXnFDBd: {
									"data-framer-name": "Phone",
								},
								VlatdNtLh: {
									"data-framer-name": "Tablet",
								},
								yb3MdUw5M: {
									"data-framer-name": "Laptop",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-5obb0t"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"tb6SHRNz_"}
							style={{
								"--framer-link-text-color": "rgb(0, 153, 255)",
								"--framer-link-text-decoration": "underline",
							}}
							verticalAlignment={"top"}
							withExternalLayout={true}
							{...addPropertyOverrides(
								{
									aIZXnFDBd: {
										transformTemplate: transformTemplate1,
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<React.Fragment>
								<motion.h1
									className={"framer-styles-preset-1qobf4s"}
									data-styles-preset={"H73t_W1ak"}
								>
									{"Mentions L\xE9gales"}
								</motion.h1>
							</React.Fragment>
						</RichText>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-YnsON.framer-uu2aci, .framer-YnsON .framer-uu2aci { display: block; }",
	".framer-YnsON.framer-1p8f9zs { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 20px; height: 227px; justify-content: flex-start; overflow: visible; padding: 100px 20px 100px 20px; position: relative; width: 1560px; }",
	".framer-YnsON .framer-5obb0t { --framer-text-wrap-override: balance; flex: none; height: auto; max-width: 100%; position: relative; width: 98%; }",
	".framer-YnsON.framer-v-1hqds8i.framer-1p8f9zs { height: 200px; width: 1200px; }",
	".framer-YnsON.framer-v-jj27mw.framer-1p8f9zs { height: 200px; width: 810px; }",
	".framer-YnsON.framer-v-1wurkgl.framer-1p8f9zs { height: 183px; padding: 40px 20px 40px 20px; width: 390px; }",
	".framer-YnsON.framer-v-1wurkgl .framer-5obb0t { bottom: 11px; left: 50%; position: absolute; width: 87%; z-index: 1; }",
	...css,
];
var FramerbvgdZ8eRq = withCSS(Component, css2, "framer-YnsON");
var stdin_default = FramerbvgdZ8eRq;
FramerbvgdZ8eRq.displayName = "Intromentions";
FramerbvgdZ8eRq.defaultProps = {
	height: 227,
	width: 1560,
};
addPropertyControls(FramerbvgdZ8eRq, {
	variant: {
		options: ["nQoKqxPaD", "yb3MdUw5M", "VlatdNtLh", "aIZXnFDBd"],
		optionTitles: ["Desktop", "Laptop", "Tablet", "Phone"],
		title: "Variant",
		type: ControlType.Enum,
	},
});
addFonts(
	FramerbvgdZ8eRq,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:intromentions
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "aIZXnFDBd",
	md: "VlatdNtLh",
	xl: "yb3MdUw5M",
	"2xl": "nQoKqxPaD",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"e8637dcc282c405e8332e4eab2cb458a196f99fcac27567df85b0de9996f5033"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * Renders IntromentionsFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale, ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"e8637dcc282c405e8332e4eab2cb458a196f99fcac27567df85b0de9996f5033"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var intromentions_default = ComponentWithRoot;
export { intromentions_default as default };
