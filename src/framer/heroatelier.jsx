// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project e8637dcc282c405e "DaVinci Watches - Finale", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Laptop' | 'Tablet' | 'Phone' // Variant
 * title?: string // Title
}} Props

 */

/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */
import { routes } from "./chunks/chunk-3QCU63GD.js";

// virtual:heroatelier
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/heroatelier-07Ey.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getLoadingLazyAtYPosition,
	Image,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
	withFX,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var RichTextWithFX = withFX(RichText);
var cycleOrder = ["GXb26f3bO", "vvsz9uRcT", "pPyLsFO8g", "O7V47UEaK"];
var serializationHash = "framer-Vb3Dr";
var variantClassNames = {
	GXb26f3bO: "framer-v-73x3yx",
	O7V47UEaK: "framer-v-1srquam",
	pPyLsFO8g: "framer-v-md4iui",
	vvsz9uRcT: "framer-v-zvrite",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var animation = {
	opacity: 0,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	x: 0,
	y: 50,
};
var transition2 = {
	damping: 50,
	delay: 0,
	mass: 1,
	stiffness: 100,
	type: "spring",
};
var animation1 = {
	opacity: 0,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	transition: transition2,
	x: 0,
	y: 50,
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Desktop: "GXb26f3bO",
	Laptop: "vvsz9uRcT",
	Phone: "O7V47UEaK",
	Tablet: "pPyLsFO8g",
};
var getProps = ({ height, id, title, width, ...props }) => {
	return {
		...props,
		b4d4kxSl_: title ?? props.b4d4kxSl_ ?? "L'Atelier DaVinci Watches",
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "GXb26f3bO",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const { style, className, layoutId, variant, b4d4kxSl_, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "GXb26f3bO",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-73x3yx",
							className,
							classNames,
						)}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"GXb26f3bO"}
						ref={refBinding}
						style={{
							backgroundColor: "rgb(255, 255, 255)",
							...style,
						}}
						{...addPropertyOverrides(
							{
								O7V47UEaK: {
									"data-framer-name": "Phone",
								},
								pPyLsFO8g: {
									"data-framer-name": "Tablet",
								},
								vvsz9uRcT: {
									"data-framer-name": "Laptop",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<Image
							background={{
								alt: "Our Hotel",
								fit: "fill",
								intrinsicHeight: 921,
								intrinsicWidth: 1920,
								loading: getLoadingLazyAtYPosition(
									(componentViewport?.y || 0) + 0,
								),
								pixelHeight: 2138,
								pixelWidth: 1200,
								src: "https://framerusercontent.com/images/MWbI1y1i3xaP2W6h1bwMpQEChk.png",
							}}
							className={"framer-tbe29j"}
							data-framer-name={"BG Image"}
							layoutDependency={layoutDependency}
							layoutId={"GpE5vtutY"}
						>
							<motion.div
								className={"framer-lsmgs4"}
								data-framer-name={"Gradient"}
								layoutDependency={layoutDependency}
								layoutId={"R4tCPcOrF"}
								style={{
									background:
										"linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgb(0, 0, 0) 100%)",
									opacity: 0.9,
								}}
							/>
						</Image>
						<RichTextWithFX
							__framer__animate={{
								transition: transition2,
							}}
							__framer__animateOnce={true}
							__framer__enter={animation}
							__framer__exit={animation1}
							__framer__styleAppearEffectEnabled={true}
							__framer__threshold={0}
							__fromCanvasComponent={true}
							__perspectiveFX={false}
							__smartComponentFX={true}
							__targetOpacity={1}
							className={"framer-1hii3dm"}
							data-framer-name={"Heading"}
							fonts={["CUSTOM;Adam Bold Bold"]}
							layoutDependency={layoutDependency}
							layoutId={"DQDBXxri3"}
							style={{
								"--extracted-gdpscs":
									"var(--token-ce16a6ab-b965-4173-bcd7-639c448a6533, rgb(255, 255, 255))",
								"--framer-paragraph-spacing": "0px",
							}}
							text={b4d4kxSl_}
							verticalAlignment={"top"}
							withExternalLayout={true}
							{...addPropertyOverrides(
								{
									O7V47UEaK: {
										children: (
											<React.Fragment>
												<motion.h1
													style={{
														"--font-selector": "Q1VTVE9NO0FkYW0gQm9sZCBCb2xk",
														"--framer-font-family":
															'"Adam Bold Bold", "Adam Bold Bold Placeholder", sans-serif',
														"--framer-font-size": "32px",
														"--framer-letter-spacing": "-0.04em",
														"--framer-line-height": "1.33em",
														"--framer-text-color":
															"var(--extracted-gdpscs, var(--token-ce16a6ab-b965-4173-bcd7-639c448a6533, rgb(255, 255, 255)))",
													}}
												>
													{"L'Atelier DaVinci Watches"}
												</motion.h1>
											</React.Fragment>
										),
									},
									pPyLsFO8g: {
										children: (
											<React.Fragment>
												<motion.h1
													style={{
														"--font-selector": "Q1VTVE9NO0FkYW0gQm9sZCBCb2xk",
														"--framer-font-family":
															'"Adam Bold Bold", "Adam Bold Bold Placeholder", sans-serif',
														"--framer-font-size": "39px",
														"--framer-letter-spacing": "-0.04em",
														"--framer-line-height": "1.33em",
														"--framer-text-color":
															"var(--extracted-gdpscs, var(--token-ce16a6ab-b965-4173-bcd7-639c448a6533, rgb(255, 255, 255)))",
													}}
												>
													{"L'Atelier DaVinci Watches"}
												</motion.h1>
											</React.Fragment>
										),
									},
									vvsz9uRcT: {
										children: (
											<React.Fragment>
												<motion.h1
													style={{
														"--font-selector": "Q1VTVE9NO0FkYW0gQm9sZCBCb2xk",
														"--framer-font-family":
															'"Adam Bold Bold", "Adam Bold Bold Placeholder", sans-serif',
														"--framer-font-size": "48px",
														"--framer-letter-spacing": "-0.04em",
														"--framer-line-height": "1.33em",
														"--framer-text-color":
															"var(--extracted-gdpscs, var(--token-ce16a6ab-b965-4173-bcd7-639c448a6533, rgb(255, 255, 255)))",
													}}
												>
													{"L'Atelier DaVinci Watches"}
												</motion.h1>
											</React.Fragment>
										),
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<React.Fragment>
								<motion.h1
									style={{
										"--font-selector": "Q1VTVE9NO0FkYW0gQm9sZCBCb2xk",
										"--framer-font-family":
											'"Adam Bold Bold", "Adam Bold Bold Placeholder", sans-serif',
										"--framer-font-size": "61px",
										"--framer-letter-spacing": "-0.04em",
										"--framer-line-height": "1.33em",
										"--framer-text-color":
											"var(--extracted-gdpscs, var(--token-ce16a6ab-b965-4173-bcd7-639c448a6533, rgb(255, 255, 255)))",
									}}
								>
									{"L'Atelier DaVinci Watches"}
								</motion.h1>
							</React.Fragment>
						</RichTextWithFX>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-Vb3Dr.framer-st57qa, .framer-Vb3Dr .framer-st57qa { display: block; }",
	".framer-Vb3Dr.framer-73x3yx { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 480px; justify-content: flex-end; overflow: hidden; padding: 64px; position: relative; width: 1560px; }",
	".framer-Vb3Dr .framer-tbe29j { bottom: 0px; flex: none; left: 0px; overflow: hidden; position: absolute; right: 0px; top: 0px; z-index: 0; }",
	".framer-Vb3Dr .framer-lsmgs4 { bottom: 0px; flex: none; left: 0px; overflow: visible; position: absolute; right: 0px; top: 0px; z-index: 0; }",
	".framer-Vb3Dr .framer-1hii3dm { flex: none; height: auto; max-width: 1640px; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; z-index: 1; }",
	".framer-Vb3Dr.framer-v-zvrite.framer-73x3yx { height: 472px; width: 1200px; }",
	".framer-Vb3Dr.framer-v-md4iui.framer-73x3yx { height: 432px; padding: 40px; width: 810px; }",
	".framer-Vb3Dr.framer-v-1srquam.framer-73x3yx { height: 422px; padding: 24px 24px 40px 24px; width: 390px; }",
];
var FrameraOkC0A5U4 = withCSS(Component, css, "framer-Vb3Dr");
var stdin_default = FrameraOkC0A5U4;
FrameraOkC0A5U4.displayName = "heroatelier";
FrameraOkC0A5U4.defaultProps = {
	height: 480,
	width: 1560,
};
addPropertyControls(FrameraOkC0A5U4, {
	variant: {
		options: ["GXb26f3bO", "vvsz9uRcT", "pPyLsFO8g", "O7V47UEaK"],
		optionTitles: ["Desktop", "Laptop", "Tablet", "Phone"],
		title: "Variant",
		type: ControlType.Enum,
	},
	b4d4kxSl_: {
		defaultValue: "L'Atelier DaVinci Watches",
		displayTextArea: false,
		title: "Title",
		type: ControlType.String,
	},
});
addFonts(
	FrameraOkC0A5U4,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Adam Bold Bold",
					source: "custom",
					url: "https://framerusercontent.com/assets/asCTCF4ToTxAfbTwnPHZUy0.woff2",
				},
			],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:heroatelier
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "O7V47UEaK",
	md: "pPyLsFO8g",
	xl: "vvsz9uRcT",
	"2xl": "GXb26f3bO",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"e8637dcc282c405e8332e4eab2cb458a196f99fcac27567df85b0de9996f5033"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * Renders HeroatelierFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale, ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"e8637dcc282c405e8332e4eab2cb458a196f99fcac27567df85b0de9996f5033"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var heroatelier_default = ComponentWithRoot;
export { heroatelier_default as default };
